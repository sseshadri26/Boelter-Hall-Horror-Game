//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""FirstPerson"",
            ""id"": ""8c070589-dfdb-42a0-9a7a-febcbfdf7c12"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""fa32b13c-32bf-421f-a69a-19a2b08a58da"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""06a870f4-f49e-438a-aaf6-36d108d7aac6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""Value"",
                    ""id"": ""231c7f56-83c2-43d6-86a0-c53c240126f0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Button"",
                    ""id"": ""16cfede8-0ee2-46db-a248-1fbdf963de1f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""ffca0cc3-6fba-42f5-be09-6c477760dd53"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""21b7371b-4bc9-4389-858f-f8430d50347b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Journal"",
                    ""type"": ""Button"",
                    ""id"": ""efacb290-a258-42bc-8082-e336b2b170fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""ab07d57b-7d5e-41ce-8b03-2c320c57a993"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""9bc61e58-cb08-425c-960a-8b535c2db37f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SprintToggle"",
                    ""type"": ""Button"",
                    ""id"": ""7ce68980-93c4-417e-b5aa-3c33e566bacf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SprintHold"",
                    ""type"": ""Button"",
                    ""id"": ""84402f2f-16a7-4055-8737-607b467865ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""aecb33f9-6944-4074-9277-31eb4100cce5"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1843764e-dff3-42c3-89fa-44f4498ae6fd"",
                    ""path"": ""<Joystick>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""0f38a255-a6e8-4fc0-b3f3-bbffa900062f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bef78369-9359-433d-af1b-c043d11231bc"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2ee8582f-8d73-4547-b84c-361b84eb540c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""196de708-e0ff-49a2-88aa-70b8ff1df6be"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e6bcc08e-1175-4e24-80a1-b20585eb7f41"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f596acb4-0e90-4c32-8479-6512a987cfda"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbc6708e-dd9b-4100-b4cb-0f0bee3cd379"",
                    ""path"": ""<Joystick>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3e31b4e-97ea-4896-b5ea-e315d32a7bde"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3abecd73-4c33-4c64-9b91-1fb333ecbe79"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f720dd9-9008-4591-81f7-20b3b974ed6a"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b74274e9-4430-463e-bfe7-d7f74d7b7512"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23ce4c7c-d449-497a-8a13-ab3f77757d20"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.25,y=0.25)"",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98409be6-ae68-46b6-a34c-112394a51f08"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51e23d93-8f94-4257-a7f8-270fd7413d8f"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eed1eeba-7747-44c3-a723-9face735f1e4"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""997b3fea-13f0-40f6-bed0-cb27b6c9d358"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b521645-315b-48bf-9aaf-7e3f18db5539"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""723c86f4-b9c0-4753-b802-daf312501cc2"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SprintHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b71d23d-100d-4a36-9b56-9e5ff2fcfb13"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SprintToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee7142b1-baf1-49d7-8d45-fa01f2c38183"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cfcb5581-439e-4872-b4ff-4090b2824f75"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f0a1374-7ec4-422a-9435-d7facb9e2b39"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17a31edf-d882-43e2-bb6a-7d2537058837"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2857e36c-54f8-42c3-bd0f-a81bba263cf5"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Journal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""530b03e4-2b19-42c6-bef3-01ba1316a84b"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Journal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // FirstPerson
        m_FirstPerson = asset.FindActionMap("FirstPerson", throwIfNotFound: true);
        m_FirstPerson_Movement = m_FirstPerson.FindAction("Movement", throwIfNotFound: true);
        m_FirstPerson_Interact = m_FirstPerson.FindAction("Interact", throwIfNotFound: true);
        m_FirstPerson_Camera = m_FirstPerson.FindAction("Camera", throwIfNotFound: true);
        m_FirstPerson_Zoom = m_FirstPerson.FindAction("Zoom", throwIfNotFound: true);
        m_FirstPerson_Jump = m_FirstPerson.FindAction("Jump", throwIfNotFound: true);
        m_FirstPerson_Crouch = m_FirstPerson.FindAction("Crouch", throwIfNotFound: true);
        m_FirstPerson_Journal = m_FirstPerson.FindAction("Journal", throwIfNotFound: true);
        m_FirstPerson_Pause = m_FirstPerson.FindAction("Pause", throwIfNotFound: true);
        m_FirstPerson_Inventory = m_FirstPerson.FindAction("Inventory", throwIfNotFound: true);
        m_FirstPerson_SprintToggle = m_FirstPerson.FindAction("SprintToggle", throwIfNotFound: true);
        m_FirstPerson_SprintHold = m_FirstPerson.FindAction("SprintHold", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // FirstPerson
    private readonly InputActionMap m_FirstPerson;
    private IFirstPersonActions m_FirstPersonActionsCallbackInterface;
    private readonly InputAction m_FirstPerson_Movement;
    private readonly InputAction m_FirstPerson_Interact;
    private readonly InputAction m_FirstPerson_Camera;
    private readonly InputAction m_FirstPerson_Zoom;
    private readonly InputAction m_FirstPerson_Jump;
    private readonly InputAction m_FirstPerson_Crouch;
    private readonly InputAction m_FirstPerson_Journal;
    private readonly InputAction m_FirstPerson_Pause;
    private readonly InputAction m_FirstPerson_Inventory;
    private readonly InputAction m_FirstPerson_SprintToggle;
    private readonly InputAction m_FirstPerson_SprintHold;
    public struct FirstPersonActions
    {
        private @Controls m_Wrapper;
        public FirstPersonActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_FirstPerson_Movement;
        public InputAction @Interact => m_Wrapper.m_FirstPerson_Interact;
        public InputAction @Camera => m_Wrapper.m_FirstPerson_Camera;
        public InputAction @Zoom => m_Wrapper.m_FirstPerson_Zoom;
        public InputAction @Jump => m_Wrapper.m_FirstPerson_Jump;
        public InputAction @Crouch => m_Wrapper.m_FirstPerson_Crouch;
        public InputAction @Journal => m_Wrapper.m_FirstPerson_Journal;
        public InputAction @Pause => m_Wrapper.m_FirstPerson_Pause;
        public InputAction @Inventory => m_Wrapper.m_FirstPerson_Inventory;
        public InputAction @SprintToggle => m_Wrapper.m_FirstPerson_SprintToggle;
        public InputAction @SprintHold => m_Wrapper.m_FirstPerson_SprintHold;
        public InputActionMap Get() { return m_Wrapper.m_FirstPerson; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FirstPersonActions set) { return set.Get(); }
        public void SetCallbacks(IFirstPersonActions instance)
        {
            if (m_Wrapper.m_FirstPersonActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnMovement;
                @Interact.started -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnInteract;
                @Camera.started -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnCamera;
                @Camera.performed -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnCamera;
                @Camera.canceled -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnCamera;
                @Zoom.started -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnZoom;
                @Zoom.performed -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnZoom;
                @Zoom.canceled -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnZoom;
                @Jump.started -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnJump;
                @Crouch.started -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnCrouch;
                @Crouch.performed -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnCrouch;
                @Crouch.canceled -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnCrouch;
                @Journal.started -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnJournal;
                @Journal.performed -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnJournal;
                @Journal.canceled -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnJournal;
                @Pause.started -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnPause;
                @Inventory.started -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnInventory;
                @Inventory.performed -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnInventory;
                @Inventory.canceled -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnInventory;
                @SprintToggle.started -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnSprintToggle;
                @SprintToggle.performed -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnSprintToggle;
                @SprintToggle.canceled -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnSprintToggle;
                @SprintHold.started -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnSprintHold;
                @SprintHold.performed -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnSprintHold;
                @SprintHold.canceled -= m_Wrapper.m_FirstPersonActionsCallbackInterface.OnSprintHold;
            }
            m_Wrapper.m_FirstPersonActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Camera.started += instance.OnCamera;
                @Camera.performed += instance.OnCamera;
                @Camera.canceled += instance.OnCamera;
                @Zoom.started += instance.OnZoom;
                @Zoom.performed += instance.OnZoom;
                @Zoom.canceled += instance.OnZoom;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @Journal.started += instance.OnJournal;
                @Journal.performed += instance.OnJournal;
                @Journal.canceled += instance.OnJournal;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
                @SprintToggle.started += instance.OnSprintToggle;
                @SprintToggle.performed += instance.OnSprintToggle;
                @SprintToggle.canceled += instance.OnSprintToggle;
                @SprintHold.started += instance.OnSprintHold;
                @SprintHold.performed += instance.OnSprintHold;
                @SprintHold.canceled += instance.OnSprintHold;
            }
        }
    }
    public FirstPersonActions @FirstPerson => new FirstPersonActions(this);
    public interface IFirstPersonActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnJournal(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnSprintToggle(InputAction.CallbackContext context);
        void OnSprintHold(InputAction.CallbackContext context);
    }
}
